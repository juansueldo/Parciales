#include "Recaudaciones.h"

int eRecaudacion_inicializar (eRecaudacion arrayRecaudacion[],int tam)
{
	int i;
	int rtn = -1;
	if(arrayRecaudacion != NULL && tam >0)
	{

		for (i = 0; i < tam; ++i)
		{
			strcpy(arrayRecaudacion[i].mes," ");
			arrayRecaudacion[i].idTipo = 0;
			arrayRecaudacion[i].idRecaudacion = 0;
			arrayRecaudacion[i].isEmpty=1;
		}
		rtn = 0;
	}
	return rtn;
}
int eTipo_inicializar (eTipo arrayTipo[],int cant)
{
	int i;
	int rtn = -1;
	if(arrayTipo != NULL && cant >0)
	{

		for (i = 0; i < cant; ++i)
		{
			arrayTipo[i].idTipo = 0;
			strcpy(arrayTipo[i].descripcion," ");
		}
		rtn = 0;
	}
	return rtn;
}
int eRecaudacion_obtenerNombre (eTipo arrayTipo[],int cant,int tipo,char detalle[20])
{
	int ret;
	ret = -1;
	int i;
	if(arrayTipo != NULL && cant > 0 && (isdigit(tipo)) == 0  && detalle != NULL)
	{
		for (i = 0; i < cant; i++)
		{
			if(arrayTipo[i].idTipo == tipo)
			{
				if(arrayTipo[i].tipo== 1)
				{
				strcpy(detalle,"LCD");
				ret = 0;
				break;
				}
				if(arrayTipo[i].codigo== 2)
				{
					strcpy(detalle,"LED");
				ret = 0;
				break;
				}
			}
		}
	}

	return ret;
}

int eRecaudacion_buscarLibre (eRecaudacion arrayRecaudacion[],int tam)
{
	int ret;
	int i;
	ret = -1;
	if(arrayRecaudacion != NULL && tam > 0)
	{
		for (i = 0; i < tam; ++i)
		{
			if(arrayRecaudacion[i].isEmpty==1)
			{
				ret = i;
				break;
			}
		}
	}
	return ret;
}
int eRecaudacion_buscarId (eRecaudacion arrayRecaudacion[],int tam,int id)
{
	int rtn = -1;
	int i;

	if (arrayRecaudacion != NULL && tam > 0) {
		for (i = 0; i < tam; i++) {
			if (arrayRecaudacion[i].idPantalla == id && arrayRecaudacion[i].isEmpty == 0) {
				rtn = i;
				break;
			}
		}
	}

	return rtn;
}
eRecaudacion eRecaudacion_cargarPantalla (void)
{
	eRecaudacion auxiliar;

		if((utn_getString(auxiliar.nombre,30,"\nIngrese el nombre de la pantalla: ","\nError. Ingrese el nombre la pantalla: ",1,3)) != 0)
		{
			printf("\n Error al ingresar el nombre");
		}
		if(utn_getFloat(&auxiliar.precio,"\nIngrese el precio: ","\nError. Ingrese el sueldo el precio: ",1000,999999,3) != 0)
		{
			printf("\n Error al ingresar el precio");
		}
		if(utn_getNumero(&auxiliar.codigo,"\nIngrese el tipo [1] LCD [2] LED: ","\nError. Ingrese el tipo [1] LCD [2] LED:",1,4,3) != 0)
		{
			printf("\n Error al ingresar el codigo");
		}

	return auxiliar;
}
int eRecaudacion_alta (eRecaudacion arrayRecaudacion[], int tam, int *pIdContador)
{
	int rtn = 0;
	eRecaudacion auxiliarPantalla;

	int index = eRecaudacion_buscarLibre (arrayRecaudacion, tam);

	if (index != -1)
	{
		//auxiliarPantalla.idPantalla = *pIdContador;
		auxiliarPantalla = eRecaudacion_cargarPantalla();

		auxiliarPantalla.isEmpty = 0;
		rtn = 1;
	}
	if(rtn == 1)
	{
		(*pIdContador)++;
		auxiliarPantalla.idPantalla = *pIdContador;
		arrayRecaudacion[index] = auxiliarPantalla;
	}


	return rtn;
}


